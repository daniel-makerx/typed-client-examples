import { DocumentParts, inline, NewLine } from '../output/writer'
import { AlgoAppSpec } from '../schema/application'
import { callFactory } from './call-factory'
import { callClient } from './call-client'
import { deployTypes } from './deploy-types'
import { argTypes } from './arg-types'
import { utilityTypes } from './utility-types'
import { imports } from './imports'
import { returnTypes } from './return-types'

export function* generate(app: AlgoAppSpec): DocumentParts {
  yield `/* eslint-disable */`
  yield `/**`
  yield ` * This file was automatically generated by algokit-client-generator.`
  yield ` * DO NOT MODIFY IT BY HAND.`
  yield ` */`

  yield* imports()
  yield* inline('export const APP_SPEC: AppSpec = ', JSON.stringify(app, undefined, 2))
  yield NewLine

  yield* utilityTypes()
  yield NewLine

  yield* returnTypes(app)

  for (const method of app.contract.methods) {
    yield* argTypes(method)
  }
  yield NewLine
  yield* deployTypes(app)

  // Write a call factory
  yield* callFactory(app)
  yield NewLine
  // Write a client
  yield* callClient(app)
}
