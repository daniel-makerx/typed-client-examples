/* eslint-disable */
/**
 * This file was automatically generated by algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 */
import * as algokit from '@algorandfoundation/algokit-utils'
import {
  AppCallTransactionResultOfType,
  CoreAppCallArgs,
  RawAppCallArgs,
  TealTemplateParams,
  AppCallTransactionResult,
} from '@algorandfoundation/algokit-utils/types/app'
import {
  AppClientCallArgs,
  AppClientCallCoreParams,
  AppClientCompilationParams,
  AppClientDeployCoreParams,
  AppDetails,
  ApplicationClient,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppSpec } from '@algorandfoundation/algokit-utils/types/app-spec'
import { Algodv2 } from 'algosdk'
export const APP_SPEC: AppSpec = {
  "hints": {
    "hello(string)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "create_1arg(string)string": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "create_2arg(string,uint32)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMSAxMApieXRlY2Jsb2NrIDB4NzQ2OTZkNjU3MyAweCAweDY3NzI2NTY1NzQ2OTZlNjcgMHgxNTFmN2M3NQp0eG4gTnVtQXBwQXJncwppbnRjXzAgLy8gMAo9PQpibnogbWFpbl9sOAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDAyYmVjZTExIC8vICJoZWxsbyhzdHJpbmcpc3RyaW5nIgo9PQpibnogbWFpbl9sNwp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGJjN2I2ZGY5IC8vICJjcmVhdGVfMWFyZyhzdHJpbmcpc3RyaW5nIgo9PQpibnogbWFpbl9sNgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGQ4NjlmNjM2IC8vICJjcmVhdGVfMmFyZyhzdHJpbmcsdWludDMyKXZvaWQiCj09CmJueiBtYWluX2w1CmVycgptYWluX2w1Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCj09CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCnN0b3JlIDIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgppbnRjXzAgLy8gMApleHRyYWN0X3VpbnQzMgpzdG9yZSAzCmxvYWQgMgpsb2FkIDMKY2FsbHN1YiBjcmVhdGUyYXJnXzYKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDY6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKPT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKY2FsbHN1YiBjcmVhdGUxYXJnXzUKc3RvcmUgMQpieXRlY18zIC8vIDB4MTUxZjdjNzUKbG9hZCAxCmNvbmNhdApsb2cKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDc6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKY2FsbHN1YiBoZWxsb18zCnN0b3JlIDAKYnl0ZWNfMyAvLyAweDE1MWY3Yzc1CmxvYWQgMApjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w4Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CmJueiBtYWluX2wxMgp0eG4gT25Db21wbGV0aW9uCnB1c2hpbnQgNCAvLyBVcGRhdGVBcHBsaWNhdGlvbgo9PQpibnogbWFpbl9sMTEKZXJyCm1haW5fbDExOgp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiB1cGRhdGVfMgppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTI6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCj09CmFzc2VydApjYWxsc3ViIGJhcmVjcmVhdGVfNAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGludF90b19hc2NpaQppbnR0b2FzY2lpXzA6CnByb3RvIDEgMQpwdXNoYnl0ZXMgMHgzMDMxMzIzMzM0MzUzNjM3MzgzOSAvLyAiMDEyMzQ1Njc4OSIKZnJhbWVfZGlnIC0xCmludGNfMSAvLyAxCmV4dHJhY3QzCnJldHN1YgoKLy8gaXRvYQppdG9hXzE6CnByb3RvIDEgMQpmcmFtZV9kaWcgLTEKaW50Y18wIC8vIDAKPT0KYm56IGl0b2FfMV9sNQpmcmFtZV9kaWcgLTEKaW50Y18yIC8vIDEwCi8KaW50Y18wIC8vIDAKPgpibnogaXRvYV8xX2w0CmJ5dGVjXzEgLy8gIiIKaXRvYV8xX2wzOgpmcmFtZV9kaWcgLTEKaW50Y18yIC8vIDEwCiUKY2FsbHN1YiBpbnR0b2FzY2lpXzAKY29uY2F0CmIgaXRvYV8xX2w2Cml0b2FfMV9sNDoKZnJhbWVfZGlnIC0xCmludGNfMiAvLyAxMAovCmNhbGxzdWIgaXRvYV8xCmIgaXRvYV8xX2wzCml0b2FfMV9sNToKcHVzaGJ5dGVzIDB4MzAgLy8gIjAiCml0b2FfMV9sNjoKcmV0c3ViCgovLyB1cGRhdGUKdXBkYXRlXzI6CnByb3RvIDAgMAp0eG4gU2VuZGVyCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CnB1c2hpbnQgVE1QTF9VUERBVEFCTEUgLy8gVE1QTF9VUERBVEFCTEUKLy8gQ2hlY2sgYXBwIGlzIHVwZGF0YWJsZQphc3NlcnQKcmV0c3ViCgovLyBoZWxsbwpoZWxsb18zOgpwcm90byAxIDEKYnl0ZWNfMSAvLyAiIgpieXRlY18xIC8vICIiCnN0b3JlIDQKaW50Y18wIC8vIDAKc3RvcmUgNQpoZWxsb18zX2wxOgpsb2FkIDUKYnl0ZWNfMCAvLyAidGltZXMiCmFwcF9nbG9iYWxfZ2V0CjwKYnogaGVsbG9fM19sMwpsb2FkIDQKYnl0ZWNfMiAvLyAiZ3JlZXRpbmciCmFwcF9nbG9iYWxfZ2V0CmNvbmNhdApwdXNoYnl0ZXMgMHgyYzIwIC8vICIsICIKY29uY2F0CmZyYW1lX2RpZyAtMQpleHRyYWN0IDIgMApjb25jYXQKcHVzaGJ5dGVzIDB4MGEgLy8gIlxuIgpjb25jYXQKc3RvcmUgNApsb2FkIDUKaW50Y18xIC8vIDEKKwpzdG9yZSA1CmIgaGVsbG9fM19sMQpoZWxsb18zX2wzOgpsb2FkIDQKZnJhbWVfYnVyeSAwCmZyYW1lX2RpZyAwCmxlbgppdG9iCmV4dHJhY3QgNiAwCmZyYW1lX2RpZyAwCmNvbmNhdApmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBiYXJlX2NyZWF0ZQpiYXJlY3JlYXRlXzQ6CnByb3RvIDAgMApieXRlY18yIC8vICJncmVldGluZyIKcHVzaGJ5dGVzIDB4NDg2NTZjNmM2ZiAvLyAiSGVsbG8iCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzAgLy8gInRpbWVzIgppbnRjXzEgLy8gMQphcHBfZ2xvYmFsX3B1dAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGNyZWF0ZV8xYXJnCmNyZWF0ZTFhcmdfNToKcHJvdG8gMSAxCmJ5dGVjXzEgLy8gIiIKYnl0ZWNfMiAvLyAiZ3JlZXRpbmciCmZyYW1lX2RpZyAtMQpleHRyYWN0IDIgMAphcHBfZ2xvYmFsX3B1dApieXRlY18wIC8vICJ0aW1lcyIKaW50Y18xIC8vIDEKYXBwX2dsb2JhbF9wdXQKZnJhbWVfZGlnIC0xCmV4dHJhY3QgMiAwCnB1c2hieXRlcyAweDVmIC8vICJfIgpjb25jYXQKYnl0ZWNfMCAvLyAidGltZXMiCmFwcF9nbG9iYWxfZ2V0CmNhbGxzdWIgaXRvYV8xCmNvbmNhdApmcmFtZV9idXJ5IDAKZnJhbWVfZGlnIDAKbGVuCml0b2IKZXh0cmFjdCA2IDAKZnJhbWVfZGlnIDAKY29uY2F0CmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIGNyZWF0ZV8yYXJnCmNyZWF0ZTJhcmdfNjoKcHJvdG8gMiAwCmJ5dGVjXzIgLy8gImdyZWV0aW5nIgpmcmFtZV9kaWcgLTIKZXh0cmFjdCAyIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMCAvLyAidGltZXMiCmZyYW1lX2RpZyAtMQphcHBfZ2xvYmFsX3B1dAppbnRjXzEgLy8gMQpyZXR1cm4=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "schema": {
    "global": {
      "declared": {
        "greeting": {
          "type": "bytes",
          "key": "greeting",
          "descr": ""
        },
        "times": {
          "type": "uint64",
          "key": "times",
          "descr": ""
        }
      },
      "reserved": {}
    },
    "local": {
      "declared": {},
      "reserved": {}
    }
  },
  "contract": {
    "name": "LifeCycleApp",
    "methods": [
      {
        "name": "hello",
        "args": [
          {
            "type": "string",
            "name": "name"
          }
        ],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "create_1arg",
        "args": [
          {
            "type": "string",
            "name": "greeting"
          }
        ],
        "returns": {
          "type": "string"
        },
        "desc": "ABI create method with 1 argument"
      },
      {
        "name": "create_2arg",
        "args": [
          {
            "type": "string",
            "name": "greeting"
          },
          {
            "type": "uint32",
            "name": "times"
          }
        ],
        "returns": {
          "type": "void"
        },
        "desc": "ABI create method with 2 arguments"
      }
    ],
    "networks": {}
  },
  "bare_call_config": {
    "no_op": "CREATE",
    "update_application": "CALL"
  }
}

export type CallRequest<TSignature extends string, TArgs = undefined> = {
  method: TSignature
  methodArgs: TArgs
} & AppClientCallCoreParams & CoreAppCallArgs
export type BareCallArgs = Omit<RawAppCallArgs, keyof CoreAppCallArgs>

export type LifeCycleAppReturnTypes = {
  'hello(string)string': string
  'hello': string
  'create_1arg(string)string': string
  'create_1arg': string
  'create_2arg(string,uint32)void': void
  'create_2arg': void
}
export type LifeCycleAppReturnTypeFor<TSignatureOrMethod> = TSignatureOrMethod extends keyof LifeCycleAppReturnTypes
  ? LifeCycleAppReturnTypes[TSignatureOrMethod]
  : undefined
export type HelloArgsObj = {
  name: string
}
export type HelloArgsTuple = [name: string]
export type HelloArgs = HelloArgsObj | HelloArgsTuple
export type Create_1argArgsObj = {
  greeting: string
}
export type Create_1argArgsTuple = [greeting: string]
export type Create_1argArgs = Create_1argArgsObj | Create_1argArgsTuple
export type Create_2argArgsObj = {
  greeting: string
  times: number
}
export type Create_2argArgsTuple = [greeting: string, times: number]
export type Create_2argArgs = Create_2argArgsObj | Create_2argArgsTuple

export type LifeCycleAppCreateArgs = BareCallArgs
  | ({ method: 'create_1arg' } & Create_1argArgsObj)
  | ({ method: 'create_2arg' } & Create_2argArgsObj)
export type LifeCycleAppUpdateArgs = BareCallArgs
export type LifeCycleAppDeleteArgs = BareCallArgs
export type LifeCycleAppDeployArgs = {
  deployTimeParams?: TealTemplateParams
  createArgs?: LifeCycleAppCreateArgs & CoreAppCallArgs
  updateArgs?: LifeCycleAppUpdateArgs & CoreAppCallArgs
  deleteArgs?: LifeCycleAppDeleteArgs & CoreAppCallArgs
}

export abstract class LifeCycleAppCallFactory {
  static hello(args: HelloArgs, params: AppClientCallCoreParams & CoreAppCallArgs = {}) {
    return {
      method: 'hello(string)string' as const,
      methodArgs: Array.isArray(args) ? args : [args.name],
      ...params,
    }
  }
  static create_1arg(args: Create_1argArgs, params: AppClientCallCoreParams & CoreAppCallArgs = {}) {
    return {
      method: 'create_1arg(string)string' as const,
      methodArgs: Array.isArray(args) ? args : [args.greeting],
      ...params,
    }
  }
  static create_2arg(args: Create_2argArgs, params: AppClientCallCoreParams & CoreAppCallArgs = {}) {
    return {
      method: 'create_2arg(string,uint32)void' as const,
      methodArgs: Array.isArray(args) ? args : [args.greeting, args.times],
      ...params,
    }
  }
}

/** A client to make calls to the LifeCycleApp smart contract */
export class LifeCycleAppClient {
  /** The underlying `ApplicationClient` for when you want to have more flexibility */
  public readonly appClient: ApplicationClient

  /**
   * Creates a new instance of `LifeCycleAppClient`
   * @param appDetails The details to identify the app to deploy
   * @param algod An algod client instance
   */
  constructor(appDetails: AppDetails, algod: Algodv2) {
    this.appClient = algokit.getAppClient({
      ...appDetails,
      app: APP_SPEC
    }, algod)
  }

  public async mapReturnValue<TSignatureOrMethod extends string>(resultPromise: Promise<AppCallTransactionResult> | AppCallTransactionResult): Promise<AppCallTransactionResultOfType<LifeCycleAppReturnTypeFor<TSignatureOrMethod>>> {
    const result = await resultPromise
    if(result.return?.decodeError) {
      throw result.return.decodeError
    }
    const returnValue = result.return?.returnValue as LifeCycleAppReturnTypeFor<TSignatureOrMethod>
    return { ...result, return: returnValue }
  }

  public call<TSignature extends string>(params: CallRequest<TSignature, any>) {
    return this.mapReturnValue<TSignature>(this.appClient.call(params))
  }

  private mapCreateArgs(args: LifeCycleAppCreateArgs & CoreAppCallArgs): AppClientCallArgs {
    switch (args.method) {
      case 'create_1arg':
        return LifeCycleAppCallFactory.create_1arg(args)
      case 'create_2arg':
        return LifeCycleAppCallFactory.create_2arg(args)
      default:
        return args
    }
  }

  /**
   * Idempotently deploys the LifeCycleApp smart contract.
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public deploy(params: LifeCycleAppDeployArgs & AppClientDeployCoreParams = {}) {
    return this.appClient.deploy({ ...params, createArgs: params.createArgs && this.mapCreateArgs(params.createArgs)})
  }

  /**
   * Creates a new instance of the LifeCycleApp smart contract.
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The creation result
   */
  public create<TMethod extends string>(args: { method?: TMethod } & LifeCycleAppCreateArgs = {}, params?: AppClientCallCoreParams & AppClientCompilationParams & CoreAppCallArgs) {
    return this.mapReturnValue<TMethod>(this.appClient.create({ ...this.mapCreateArgs(args), ...params, }))
  }

  /**
   * Updates an existing instance of the LifeCycleApp smart contract.
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The update result
   */
  public update(args: LifeCycleAppUpdateArgs = {}, params?: AppClientCallCoreParams & AppClientCompilationParams & CoreAppCallArgs) {
    return this.appClient.update({ ...args, ...params, })
  }

  /**
   * Deletes an existing instance of the LifeCycleApp smart contract.
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The deletion result
   */
  public delete(args: LifeCycleAppDeleteArgs = {}, params?: AppClientCallCoreParams & AppClientCompilationParams & CoreAppCallArgs) {
    return this.appClient.delete({ ...args, ...params, })
  }

  /**
   * Calls the hello(string)string ABI method.
   *
   * @param args The arguments for the ABI method
   * @param params Any additional parameters for the call
   * @returns The result of the call
   */
  public hello(args: HelloArgs, params?: AppClientCallCoreParams & CoreAppCallArgs) {
    return this.call(LifeCycleAppCallFactory.hello(args, params))
  }

}
